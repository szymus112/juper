:root {
    --bg-dark: #0a0a0a;
    --bg-card: #1a1a1a;
    --text-primary: #e5e5e5;
    --text-secondary: #a3a3a3;
    --border-color: rgba(107, 114, 128, 0.2); /* Szaro-zielona poświata */
    --error-color: #f87171;
    --accent-gradient: linear-gradient(135deg, #4ade80, #34d399);
    --grid-color: rgba(52, 211, 153, 0.07); /* Kolor siatki */
}

* { box-sizing: border-box; margin: 0; padding: 0; }

body {
    /* Usunięto bezpośrednie tło z body */
    font-family: 'Montserrat', sans-serif;
    color: var(--text-primary);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background-color: var(--bg-dark); /* Dodano kolor tła pod siatkę */
}

/* NOWE TŁO - SIATKA */
.background-grid {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background-image:
        linear-gradient(var(--grid-color) 1px, transparent 1px),
        linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: background-pan 30s linear infinite;
}

/* Dodajemy ten div na początku body w HTML, ale dla uproszczenia,
   można założyć, że jest i stylować bez zmiany HTML */
html, body {
    height: 100%;
}


.page-wrapper {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    position: relative; /* Potrzebne dla z-index */
    z-index: 1;
}

header, footer {
    flex-shrink: 0;
}

main {
    flex-grow: 1;
    width: 100%;
}

.container {
    max-width: 900px;
    margin-left: auto;
    margin-right: auto;
    padding: 0 20px;
}

/* Header */
header {
    background: rgba(10, 10, 10, 0.7);
    backdrop-filter: blur(10px);
    border-bottom: 1px solid var(--border-color);
    padding: 20px 0;
    position: sticky;
    top: 0;
    z-index: 100;
}
header .container {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: center;
}
.logo {
    font-family: 'Source Code Pro', monospace;
    font-size: 24px;
    font-weight: 700;
    letter-spacing: 1px;
    justify-self: start;
}
.logo span {
    background: var(--accent-gradient);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-weight: 600;
    animation: blink 1s step-end infinite;
}
nav {
    display: flex;
    gap: 40px;
    justify-self: center;
}
.nav-link {
    color: var(--text-secondary);
    text-decoration: none;
    font-weight: 500;
    padding-bottom: 5px;
    border-bottom: 3px solid transparent;
    transition: all 0.3s;
}
.nav-link:hover { color: var(--text-primary); }
.nav-link.active {
    color: var(--text-primary);
    border-image: var(--accent-gradient) 1;
}
.header-placeholder {
    justify-self: end;
}

/* Blok informacyjny */
.info-box {
    background: var(--bg-card);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 30px;
    text-align: center;
    margin-bottom: 50px;
}
.info-box h3 {
    font-size: 24px;
    color: var(--text-primary);
    margin-bottom: 10px;
}
.info-box p {
    color: var(--text-secondary);
    max-width: 600px;
    margin: 0 auto 20px auto;
}

/* Strona główna */
.story-grid {
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    gap: 40px;
    align-items: center;
}
.story-image-container {
    border-radius: 12px;
    overflow: hidden;
    border: 1px solid var(--border-color);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
}
.story-image-container img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}
.story-content h2 {
    font-size: 32px;
    margin-bottom: 20px;
    line-height: 1.3;
}
.story-content p {
    font-size: 16px;
    line-height: 1.8;
    color: var(--text-secondary);
    margin-bottom: 15px;
}

/* Przyciski */
.cta-button, #send-btn {
    background: var(--accent-gradient);
    color: var(--bg-dark);
    border: none;
    padding: 12px 25px;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s;
    text-align: center;
    display: inline-block;
}
.cta-button:hover, #send-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(52, 211, 153, 0.2);
}

/* Sekcje i karty */
.page {
    display: none;
    padding: 50px 0;
    animation: fadeIn 0.5s ease;
}
.page.active { display: block; }

.submission-box, .post {
    background: var(--bg-card);
    padding: 30px;
    border-radius: 8px;
    border: 1px solid var(--border-color);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}
.submission-box { margin-bottom: 40px; }
.post { margin-bottom: 20px; transition: all 0.3s; }
.post.success { border-left: 4px solid #4ade80; }
.post.error { border-left: 4px solid var(--error-color); }

.submission-box h3 { font-size: 22px; margin-bottom: 5px; }
.submission-box p { color: var(--text-secondary); margin-bottom: 20px; }
.submission-box textarea {
    width: 100%;
    background: #2a2a2a;
    border: 1px solid #444;
    color: var(--text-primary);
    padding: 15px;
    border-radius: 6px;
    font-size: 16px;
    min-height: 120px;
    margin-bottom: 20px;
    resize: vertical;
}
#send-btn:disabled {
    background: #555;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}
.feed-header { border-bottom: 1px solid var(--border-color); margin-bottom: 20px; }
.feed-header h2 { font-size: 24px; padding-bottom: 10px; }
.post-content { font-size: 16px; line-height: 1.6; }
.post-footer { text-align: right; font-size: 12px; color: var(--text-secondary); margin-top: 20px; font-family: 'Source Code Pro', monospace; }

footer {
    text-align: center;
    padding: 40px 0;
    color: var(--text-secondary);
    font-size: 14px;
    border-top: 1px solid var(--border-color);
    margin-top: 50px;
}

/* Animacje */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}
@keyframes blink {
  50% { opacity: 0; }
}

@keyframes background-pan {
    from { background-position: 0 0; }
    to { background-position: -50px -50px; }
}


/* Responsywność */
@media (max-width: 768px) {
    header .container {
        grid-template-columns: 1fr;
        gap: 20px;
        justify-items: center;
    }
    .logo { justify-self: center; }
    nav { justify-self: center; }
    .header-placeholder { display: none; }

    .story-grid {
        grid-template-columns: 1fr;
    }
    .story-content h2 { font-size: 28px; }
    .page { padding: 30px 0; }
    .submission-box, .post { padding: 20px; }
}

/* FINALNY EFEKT - POJEDYNCZE, LOSOWE BŁYSKI ŚWIATŁA */

/* Definiujemy kolor naszej poświaty */
:root {
    /* ... (twoje istniejące zmienne) ... */
    --glimmer-color: rgba(52, 211, 153, 0.12); /* Kolor dla błysków */
}

/* Definiujemy animację pojedynczego błysku (pojawienie się i zniknięcie) */
@keyframes glimmer-effect {
  0%, 100% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
}

/* Używamy pseudoelementu do hostowania naszych "świetlików" */
.background-grid::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  pointer-events: none;

  /*
   * TUTAJ DZIEJE SIĘ MAGIA:
   * Tworzymy kilka źródeł światła (gradientów) jako osobne tła.
   * Każde z nich jest inaczej umiejscowione (at X% Y%).
  */
  background-image: 
    /* Świetlik 1 */
    radial-gradient(circle 350px at 15% 20%, var(--glimmer-color), transparent),
    /* Świetlik 2 */
    radial-gradient(circle 300px at 80% 40%, var(--glimmer-color), transparent),
    /* Świetlik 3 */
    radial-gradient(circle 250px at 70% 85%, var(--glimmer-color), transparent),
    /* Świetlik 4 */
    radial-gradient(circle 300px at 30% 70%, var(--glimmer-color), transparent);
  
  background-repeat: no-repeat;

  /* Ustawiamy zerową przezroczystość na starcie, animacja to zmieni */
  opacity: 0;

  /*
   * NAJWAŻNIEJSZA CZĘŚĆ:
   * Stosujemy tę samą animację do każdego ze świateł,
   * ale z RÓŻNYMI opóźnieniami i czasami trwania.
   * To tworzy iluzję losowości.
   * Format: [nazwa] [czas trwania] [timing] [opóźnienie] [liczba powtórzeń]
  */
  animation-name: glimmer-effect, glimmer-effect, glimmer-effect, glimmer-effect;
  animation-duration: 7s, 8s, 6s, 9s;
  animation-iteration-count: infinite, infinite, infinite, infinite;
  animation-timing-function: ease-in-out, ease-in-out, ease-in-out, ease-in-out;
}